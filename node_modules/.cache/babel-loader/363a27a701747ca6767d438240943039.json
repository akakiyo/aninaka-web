{"ast":null,"code":"// import { useState, useCallback, useEffect } from \"react\";\n// import { firebaseAuth } from \"../firebase\";\n// const useFirebaseAuth = () => {\n//   const [currentUser, setCurrentUser] = useState(firebaseAuth.currentUser);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [isLoading, setIsLoading] = useState(true);\n//   console.log(\"currentUser\", currentUser);\n//   useEffect(() => {\n//     let unmounted = false;\n//     firebaseAuth.onAuthStateChanged((user) => {\n//       if (user) {\n//         user.getIdTokenResult(true).then((result) => {\n//           if (!unmounted) {\n//             setIsAuthenticated(true);\n//             setCurrentUser(user);\n//             setIsLoading(false);\n//           }\n//         });\n//       } else if (!unmounted) {\n//         setIsAuthenticated(false);\n//         setCurrentUser(\"\");\n//         setIsLoading(false);\n//       }\n//     });\n//     return () => {\n//       unmounted = true;\n//     };\n//   }, []);\n//   const cleanUpAuthentication = () => {\n//     setIsAuthenticated(false);\n//     setCurrentUser(\"\");\n//     setIsLoading(true);\n//   };\n//   const signup = useCallback((email, password) => {\n//     firebaseAuth\n//       .createUserWithEmailAndPassword(email, password)\n//       .catch((err) => alert(err));\n//   }, []);\n//   const login = useCallback((email, password) => {\n//     firebaseAuth\n//       .signInWithEmailAndPassword(email, password)\n//       .catch((err) => alert(err));\n//   }, []);\n//   const logout = useCallback(() => {\n//     firebaseAuth.signOut();\n//     cleanUpAuthentication();\n//   }, []);\n//   return {\n//     signup,\n//     login,\n//     logout,\n//     currentUser,\n//     isAuthenticated,\n//     isLoading,\n//   };\n// };\n// export default useFirebaseAuth;","map":{"version":3,"sources":["/Users/kiyo/private/aninaka/frontend/src/components/auth/useFirebaseAuth.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { useState, useCallback, useEffect } from \"react\";\n// import { firebaseAuth } from \"../firebase\";\n\n// const useFirebaseAuth = () => {\n//   const [currentUser, setCurrentUser] = useState(firebaseAuth.currentUser);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [isLoading, setIsLoading] = useState(true);\n//   console.log(\"currentUser\", currentUser);\n//   useEffect(() => {\n//     let unmounted = false;\n//     firebaseAuth.onAuthStateChanged((user) => {\n//       if (user) {\n//         user.getIdTokenResult(true).then((result) => {\n//           if (!unmounted) {\n//             setIsAuthenticated(true);\n//             setCurrentUser(user);\n//             setIsLoading(false);\n//           }\n//         });\n//       } else if (!unmounted) {\n//         setIsAuthenticated(false);\n//         setCurrentUser(\"\");\n//         setIsLoading(false);\n//       }\n//     });\n\n//     return () => {\n//       unmounted = true;\n//     };\n//   }, []);\n\n//   const cleanUpAuthentication = () => {\n//     setIsAuthenticated(false);\n//     setCurrentUser(\"\");\n//     setIsLoading(true);\n//   };\n\n//   const signup = useCallback((email, password) => {\n//     firebaseAuth\n//       .createUserWithEmailAndPassword(email, password)\n//       .catch((err) => alert(err));\n//   }, []);\n\n//   const login = useCallback((email, password) => {\n//     firebaseAuth\n//       .signInWithEmailAndPassword(email, password)\n//       .catch((err) => alert(err));\n//   }, []);\n\n//   const logout = useCallback(() => {\n//     firebaseAuth.signOut();\n//     cleanUpAuthentication();\n//   }, []);\n\n//   return {\n//     signup,\n//     login,\n//     logout,\n//     currentUser,\n//     isAuthenticated,\n//     isLoading,\n//   };\n// };\n\n// export default useFirebaseAuth;\n"]},"metadata":{},"sourceType":"module"}