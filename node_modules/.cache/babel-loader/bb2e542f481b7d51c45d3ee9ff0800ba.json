{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\";\nimport { firebaseAuth } from \"../firebase\";\n\nconst useFirebaseAuth = () => {\n  _s();\n\n  var _firebaseAuth$current, _firebaseAuth$current2, _firebaseAuth$current3;\n\n  const [currentUser, setCurrentUser] = useState(firebaseAuth.currentUser);\n  const [userId, setUserId] = useState(firebaseAuth === null || firebaseAuth === void 0 ? void 0 : (_firebaseAuth$current = firebaseAuth.currentUser) === null || _firebaseAuth$current === void 0 ? void 0 : (_firebaseAuth$current2 = _firebaseAuth$current.multiFactor) === null || _firebaseAuth$current2 === void 0 ? void 0 : (_firebaseAuth$current3 = _firebaseAuth$current2.user) === null || _firebaseAuth$current3 === void 0 ? void 0 : _firebaseAuth$current3.uid);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    let unmounted = false;\n    firebaseAuth.onAuthStateChanged(user => {\n      if (user) {\n        user.getIdTokenResult(true).then(result => {\n          if (!unmounted) {\n            setIsAuthenticated(true);\n            setCurrentUser(user);\n            setIsLoading(false);\n          }\n        });\n      } else if (!unmounted) {\n        setIsAuthenticated(false);\n        setCurrentUser(\"\");\n        setIsLoading(false);\n      }\n    });\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  const cleanUpAuthentication = () => {\n    setIsAuthenticated(false);\n    setCurrentUser(\"\");\n    setIsLoading(true);\n  };\n\n  const signup = useCallback(async (email, password) => {\n    const user = await firebaseAuth.createUserWithEmailAndPassword(email, password).catch(err => alert(err));\n    return user.user.multiFactor.user.uid;\n  }, []);\n  const login = useCallback((email, password) => {\n    firebaseAuth.signInWithEmailAndPassword(email, password).catch(err => alert(err));\n  }, []);\n  const logout = useCallback(() => {\n    firebaseAuth.signOut();\n    cleanUpAuthentication();\n  }, []);\n  return {\n    signup,\n    login,\n    logout,\n    currentUser,\n    isAuthenticated,\n    isLoading\n  };\n};\n\n_s(useFirebaseAuth, \"wfL7WgQXsWuODXR7n8chRMTyDrI=\");\n\nexport default useFirebaseAuth;","map":{"version":3,"sources":["/Users/kiyo/private/aninaka/frontend/src/auth/useFirebaseAuth.js"],"names":["useState","useCallback","useEffect","firebaseAuth","useFirebaseAuth","currentUser","setCurrentUser","userId","setUserId","multiFactor","user","uid","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","unmounted","onAuthStateChanged","getIdTokenResult","then","result","cleanUpAuthentication","signup","email","password","createUserWithEmailAndPassword","catch","err","alert","login","signInWithEmailAndPassword","logout","signOut"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAAA;;AAC5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACG,YAAY,CAACE,WAAd,CAA9C;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAClCG,YADkC,aAClCA,YADkC,gDAClCA,YAAY,CAAEE,WADoB,oFAClC,sBAA2BI,WADO,qFAClC,uBAAwCC,IADN,2DAClC,uBAA8CC,GADZ,CAApC;AAIA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,SAAS,GAAG,KAAhB;AACAb,IAAAA,YAAY,CAACc,kBAAb,CAAiCP,IAAD,IAAU;AACxC,UAAIA,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACQ,gBAAL,CAAsB,IAAtB,EAA4BC,IAA5B,CAAkCC,MAAD,IAAY;AAC3C,cAAI,CAACJ,SAAL,EAAgB;AACdH,YAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAP,YAAAA,cAAc,CAACI,IAAD,CAAd;AACAK,YAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,SAND;AAOD,OARD,MAQO,IAAI,CAACC,SAAL,EAAgB;AACrBH,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAP,QAAAA,cAAc,CAAC,EAAD,CAAd;AACAS,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAdD;AAgBA,WAAO,MAAM;AACXC,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFD;AAGD,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,QAAMK,qBAAqB,GAAG,MAAM;AAClCR,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAP,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAJD;;AAMA,QAAMO,MAAM,GAAGrB,WAAW,CAAC,OAAOsB,KAAP,EAAcC,QAAd,KAA2B;AACpD,UAAMd,IAAI,GAAG,MAAMP,YAAY,CAC5BsB,8BADgB,CACeF,KADf,EACsBC,QADtB,EAEhBE,KAFgB,CAETC,GAAD,IAASC,KAAK,CAACD,GAAD,CAFJ,CAAnB;AAGA,WAAOjB,IAAI,CAACA,IAAL,CAAUD,WAAV,CAAsBC,IAAtB,CAA2BC,GAAlC;AACD,GALyB,EAKvB,EALuB,CAA1B;AAOA,QAAMkB,KAAK,GAAG5B,WAAW,CAAC,CAACsB,KAAD,EAAQC,QAAR,KAAqB;AAC7CrB,IAAAA,YAAY,CACT2B,0BADH,CAC8BP,KAD9B,EACqCC,QADrC,EAEGE,KAFH,CAEUC,GAAD,IAASC,KAAK,CAACD,GAAD,CAFvB;AAGD,GAJwB,EAItB,EAJsB,CAAzB;AAMA,QAAMI,MAAM,GAAG9B,WAAW,CAAC,MAAM;AAC/BE,IAAAA,YAAY,CAAC6B,OAAb;AACAX,IAAAA,qBAAqB;AACtB,GAHyB,EAGvB,EAHuB,CAA1B;AAKA,SAAO;AACLC,IAAAA,MADK;AAELO,IAAAA,KAFK;AAGLE,IAAAA,MAHK;AAIL1B,IAAAA,WAJK;AAKLO,IAAAA,eALK;AAMLE,IAAAA;AANK,GAAP;AAQD,CAhED;;GAAMV,e;;AAkEN,eAAeA,eAAf","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport { firebaseAuth } from \"../firebase\";\n\nconst useFirebaseAuth = () => {\n  const [currentUser, setCurrentUser] = useState(firebaseAuth.currentUser);\n  const [userId, setUserId] = useState(\n    firebaseAuth?.currentUser?.multiFactor?.user?.uid\n  );\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    let unmounted = false;\n    firebaseAuth.onAuthStateChanged((user) => {\n      if (user) {\n        user.getIdTokenResult(true).then((result) => {\n          if (!unmounted) {\n            setIsAuthenticated(true);\n            setCurrentUser(user);\n            setIsLoading(false);\n          }\n        });\n      } else if (!unmounted) {\n        setIsAuthenticated(false);\n        setCurrentUser(\"\");\n        setIsLoading(false);\n      }\n    });\n\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  const cleanUpAuthentication = () => {\n    setIsAuthenticated(false);\n    setCurrentUser(\"\");\n    setIsLoading(true);\n  };\n\n  const signup = useCallback(async (email, password) => {\n    const user = await firebaseAuth\n      .createUserWithEmailAndPassword(email, password)\n      .catch((err) => alert(err));\n    return user.user.multiFactor.user.uid;\n  }, []);\n\n  const login = useCallback((email, password) => {\n    firebaseAuth\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => alert(err));\n  }, []);\n\n  const logout = useCallback(() => {\n    firebaseAuth.signOut();\n    cleanUpAuthentication();\n  }, []);\n\n  return {\n    signup,\n    login,\n    logout,\n    currentUser,\n    isAuthenticated,\n    isLoading,\n  };\n};\n\nexport default useFirebaseAuth;\n"]},"metadata":{},"sourceType":"module"}