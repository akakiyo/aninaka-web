{"ast":null,"code":"var _jsxFileName = \"/Users/kiyo/private/aninaka2/frontend/src/components/Alert/AlertTemplate.js\";\nimport styled from \"styled-components\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertTemplate = _ref => {\n  let {\n    style,\n    options,\n    message,\n    close\n  } = _ref;\n  const type = options.type;\n  let title = \"\";\n\n  switch (type) {\n    case \"error\":\n      title = \"失敗\";\n      break;\n\n    case \"success\":\n      title = \"フレンド登録しました\";\n      break;\n\n    case \"info\":\n      title = \"お知らせ\";\n      break;\n\n    default:\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    type: type,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [type === \"error\" && /*#__PURE__*/_jsxDEV(ErrorOutlineIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 30\n      }, this), type === \"success\" && /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 32\n      }, this), type === \"info\" && /*#__PURE__*/_jsxDEV(InfoOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Type, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonArea, {\n      children: /*#__PURE__*/_jsxDEV(OKButton, {\n        onClick: close,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AlertTemplate;\nconst Container = styled.div`\n  position: relative;\n  color: white;\n  background-color: ${props => props.type === \"error\" ? \"#d4342c\" : props.type === \"success\" ? \"#3c8c3c\" : \"#048cd4\"};\n  width: 200px;\n  height: auto;\n  border-radius: 30px;\n  padding: 10%;\n`;\n_c2 = Container;\nconst Type = styled.span`\n  font-size: 19px;\n  margin-left: 5%;\n`;\n_c3 = Type;\nconst Message = styled.div`\n  margin-top: 10%;\n  font-size: 15px;\n`;\nconst ButtonArea = styled.div`\n  position: relative;\n  text-align: right;\n}\n`;\n_c4 = ButtonArea;\nconst OKButton = styled.button`\n  background-color: white;\n  border: none;\n  color: black;\n  font-size: 20px;\n  border-radius: 10px;\n  width: 80px;\n  height: 30px;\n  margin: 10px;\n  :hover {\n    background-color: #ffffff8f;\n  }\n`;\n_c5 = OKButton;\nexport default AlertTemplate;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AlertTemplate\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Type\");\n$RefreshReg$(_c4, \"ButtonArea\");\n$RefreshReg$(_c5, \"OKButton\");","map":{"version":3,"sources":["/Users/kiyo/private/aninaka2/frontend/src/components/Alert/AlertTemplate.js"],"names":["styled","ErrorOutlineIcon","CheckCircleOutlineIcon","InfoOutlinedIcon","AlertTemplate","style","options","message","close","type","title","Container","div","props","Type","span","Message","ButtonArea","OKButton","button"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,sBAAP,MAAmC,wCAAnC;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;;;AAEA,MAAMC,aAAa,GAAG,QAAwC;AAAA,MAAvC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,GAAuC;AAC5D,QAAMC,IAAI,GAAGH,OAAO,CAACG,IAArB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,UAAQD,IAAR;AACE,SAAK,OAAL;AACEC,MAAAA,KAAK,GAAG,IAAR;AACA;;AACF,SAAK,SAAL;AACEA,MAAAA,KAAK,GAAG,YAAR;AACA;;AACF,SAAK,MAAL;AACEA,MAAAA,KAAK,GAAG,MAAR;AACA;;AACF;AACE;AAXJ;;AAaA,sBACE,QAAC,SAAD;AAAW,IAAA,IAAI,EAAED,IAAjB;AAAuB,IAAA,KAAK,EAAEJ,KAA9B;AAAA,4BACE;AAAA,iBACGI,IAAI,KAAK,OAAT,iBAAoB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADvB,EAEGA,IAAI,KAAK,SAAT,iBAAsB,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA,cAFzB,EAGGA,IAAI,KAAK,MAAT,iBAAmB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAHtB,eAIE,QAAC,IAAD;AAAA,kBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,UAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEF,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAtCD;;KAAMJ,a;AAwCN,MAAMO,SAAS,GAAGX,MAAM,CAACY,GAAI;AAC7B;AACA;AACA,sBAAuBC,KAAD,IAClBA,KAAK,CAACJ,IAAN,KAAe,OAAf,GACI,SADJ,GAEII,KAAK,CAACJ,IAAN,KAAe,SAAf,GACA,SADA,GAEA,SAAU;AAClB;AACA;AACA;AACA;AACA,CAbA;MAAME,S;AAcN,MAAMG,IAAI,GAAGd,MAAM,CAACe,IAAK;AACzB;AACA;AACA,CAHA;MAAMD,I;AAIN,MAAME,OAAO,GAAGhB,MAAM,CAACY,GAAI;AAC3B;AACA;AACA,CAHA;AAIA,MAAMK,UAAU,GAAGjB,MAAM,CAACY,GAAI;AAC9B;AACA;AACA;AACA,CAJA;MAAMK,U;AAKN,MAAMC,QAAQ,GAAGlB,MAAM,CAACmB,MAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMD,Q;AAcN,eAAed,aAAf","sourcesContent":["import styled from \"styled-components\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\n\nconst AlertTemplate = ({ style, options, message, close }) => {\n  const type = options.type;\n  let title = \"\";\n  switch (type) {\n    case \"error\":\n      title = \"失敗\";\n      break;\n    case \"success\":\n      title = \"フレンド登録しました\";\n      break;\n    case \"info\":\n      title = \"お知らせ\";\n      break;\n    default:\n      break;\n  }\n  return (\n    <Container type={type} style={style}>\n      <div>\n        {type === \"error\" && <ErrorOutlineIcon />}\n        {type === \"success\" && <CheckCircleOutlineIcon />}\n        {type === \"info\" && <InfoOutlinedIcon />}\n        <Type>{title}</Type>\n\n        {/* <Message>\n          {message.split(\"\\n\").map((text, i) => (\n            <span key={String(i) + \"_\" + text}>\n              <span>{text}</span>\n              <br />\n            </span>\n          ))}\n        </Message> */}\n      </div>\n      <ButtonArea>\n        <OKButton onClick={close}>OK</OKButton>\n      </ButtonArea>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  position: relative;\n  color: white;\n  background-color: ${(props) =>\n    props.type === \"error\"\n      ? \"#d4342c\"\n      : props.type === \"success\"\n      ? \"#3c8c3c\"\n      : \"#048cd4\"};\n  width: 200px;\n  height: auto;\n  border-radius: 30px;\n  padding: 10%;\n`;\nconst Type = styled.span`\n  font-size: 19px;\n  margin-left: 5%;\n`;\nconst Message = styled.div`\n  margin-top: 10%;\n  font-size: 15px;\n`;\nconst ButtonArea = styled.div`\n  position: relative;\n  text-align: right;\n}\n`;\nconst OKButton = styled.button`\n  background-color: white;\n  border: none;\n  color: black;\n  font-size: 20px;\n  border-radius: 10px;\n  width: 80px;\n  height: 30px;\n  margin: 10px;\n  :hover {\n    background-color: #ffffff8f;\n  }\n`;\n\nexport default AlertTemplate;\n"]},"metadata":{},"sourceType":"module"}